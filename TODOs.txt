Completed.
1. asserter.h/.c done. Documentation done. Tests done.
2. event.h/.c and object_id.hs/.c done. Documentation done.
3. circular_dll.h/.c done. Tests done. Don't need to test 2 nodes in same struct that are apart of separate lists
since we are already doing that with tests that use extra_list; Documentation done.
4. itimer.h/.c and timer.h/.c done. Tests done. Documentation done.
5. endian.h. Tests done. Documentation done.
6. fsm.h/.c. Tests done. Documentation done.

Ring Buffer:
1. Add tests 
2. Add documentation.

Tree:
1. Finish destroy function.
2. Add tests.
3. Add documentation

Asserter:
1. Make set_assert_functor() function that sets the assert handler of all modules. I.e.
void set_assert_functor(functor)
{
    ecu_timer_set_assert_functor(functor);
    ecu_fsm_set_assert_functor(functor);
    ecu_circular_dll_set_assert_functor(functor);
    ....
}

All:
1. Possible include file comments about PRIVATE members for restof source files (like the description in circular_dll.h).

CI Pipeline Steps:
If any step fails do not move on.
1. format check. clang-format.
2. Compile. cmake and cmake --build
- cmake -DECU_DISABLE_RUNTIME_ASSERTS=OFF --preset linux-gnu-build // for runtime asserts enabled
- cmake --build --preset linux-gnu-build

- cmake -DECU_DISABLE_RUNTIME_ASSERTS=ON --preset linux-gnu-build // for runtime asserts disabled
- cmake --build --preset linux-gnu-build

3. static analysis. clang-tidy
4. run unit tests.
5. generate documentation. doxygen